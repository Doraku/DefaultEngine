<Grid
    x:Class="DefaultApplication.Internal.Plugins.ContentDialogServicePlugin.Controls.ContentDialogControl"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:DefaultApplication.Controls.Behaviors"
    xmlns:controls="using:DefaultApplication.Internal.Plugins.ContentDialogServicePlugin.Controls"
    xmlns:services="using:DefaultApplication.Services"
    IsVisible="{Binding !!$self.Opacity}"
    Opacity="0">

    <Grid.Styles>
        <Style Selector="controls|ContentDialogControl">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition
                        Easing="SineEaseIn"
                        Property="Opacity"
                        Duration="0:0:0.3" />
                </Transitions>
            </Setter>
        </Style>
    </Grid.Styles>

    <Border
        x:Name="ContentDialogBorder"
        behaviors:ContentDialog.IsFullScreen="{Binding #ContentDialogPresenter.Child?.(behaviors:ContentDialog.IsFullScreen), TargetNullValue=False}"
        Background="{Binding $parent[TopLevel].Background}"
        BorderBrush="{DynamicResource SystemAccentColor}">

        <Border.Styles>

            <Style Selector="Border#ContentDialogBorder">

                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="CornerRadius" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BoxShadow" Value="0 0 10 5 DarkGray" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Padding" Value="5" />


                <Style Selector="^[(behaviors|ContentDialog.IsFullScreen)=True]">

                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="CornerRadius" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BoxShadow" Value="0 0 0 0 DarkGray" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />

                </Style>

            </Style>

        </Border.Styles>

        <DockPanel>

            <UniformGrid
                Margin="0,5,0,0"
                HorizontalAlignment="Right"
                ColumnSpacing="5"
                DockPanel.Dock="Bottom"
                Rows="1">

                <Button
                    HorizontalAlignment="Stretch"
                    Command="{Binding $parent[controls:ContentDialogControl].OnContentDialogReturn}"
                    CommandParameter="{x:Static services:IContentDialogService+DialogResult.Primary}"
                    Content="{Binding #ContentDialogPresenter.Child?.(behaviors:ContentDialog.PrimaryContent)}"
                    IsEnabled="{Binding #ContentDialogPresenter.Child?.(behaviors:ContentDialog.CanReturnPrimary), TargetNullValue=False}"
                    IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}" />

                <Button
                    HorizontalAlignment="Stretch"
                    Command="{Binding $parent[controls:ContentDialogControl].OnContentDialogReturn}"
                    CommandParameter="{x:Static services:IContentDialogService+DialogResult.Secondary}"
                    Content="{Binding #ContentDialogPresenter.Child?.(behaviors:ContentDialog.SecondaryContent)}"
                    IsEnabled="{Binding #ContentDialogPresenter.Child?.(behaviors:ContentDialog.CanReturnSecondary), TargetNullValue=False}"
                    IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}" />

                <Button
                    HorizontalAlignment="Stretch"
                    Command="{Binding $parent[controls:ContentDialogControl].OnContentDialogReturn}"
                    CommandParameter="{x:Static services:IContentDialogService+DialogResult.None}"
                    Content="{Binding #ContentDialogPresenter.Child?.(behaviors:ContentDialog.NoneContent)}"
                    IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}" />

            </UniformGrid>

            <ContentPresenter x:Name="ContentDialogPresenter" Content="{Binding $parent[controls:ContentDialogControl].Tag}" />

        </DockPanel>

    </Border>

</Grid>
