<Panel
    x:Class="Avalonia.DefaultLayout.Internal.Controls.LayoutDropControl"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Avalonia.DefaultLayout.Controls"
    xmlns:converters="using:Avalonia.DefaultLayout.Internal.Converters"
    xmlns:local="using:Avalonia.DefaultLayout.Internal.Controls"
    xmlns:views="using:Avalonia.DefaultLayout.Internal.Views">

    <Panel.Styles>

        <Style Selector="views|StackedLayoutContentView local|LayoutDropControl">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="FlyoutPresenter local|LayoutDropControl">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="ContentPresenter.LayoutTarget">
            <Setter Property="Content">
                <Template>
                    <Border
                        Width="40"
                        Height="40"
                        Margin="10"
                        Padding="5"
                        Background="{Binding $parent[TopLevel].Background}"
                        BorderBrush="{DynamicResource SystemAccentColor}"
                        BorderThickness="1"
                        CornerRadius="5"
                        DragDrop.AllowDrop="True">
                        <Viewbox>
                            <PathIcon Data="{Binding $parent[ContentPresenter].Tag}" Foreground="{DynamicResource SystemAccentColor}" />
                        </Viewbox>
                    </Border>
                </Template>
            </Setter>
        </Style>

    </Panel.Styles>

    <Border
        x:Name="LayoutTarget"
        BorderBrush="{DynamicResource SystemAccentColor}"
        BorderThickness="5"
        IsVisible="False">
        <Rectangle Fill="{DynamicResource SystemAccentColor}" Opacity="0.5" />
    </Border>

    <Panel>

        <Panel.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.Or}">

                <Binding
                    Converter="{x:Static converters:ILayoutContentConverters.IsNotLayoutContentNorStackedLayoutContent}"
                    Path="Content"
                    RelativeSource="{RelativeSource AncestorType={x:Type local:LayoutContentPresenter}}" />

                <Binding Path="IsRoot" RelativeSource="{RelativeSource AncestorType={x:Type local:LayoutContentPresenter}}" />

            </MultiBinding>
        </Panel.IsVisible>

        <ContentPresenter
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Classes="LayoutTarget"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockLeftIcon}" />

        <ContentPresenter
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Classes="LayoutTarget"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockRightIcon}" />

        <ContentPresenter
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Classes="LayoutTarget"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockTopIcon}" />

        <ContentPresenter
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Classes="LayoutTarget"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockBottomIcon}" />

    </Panel>

    <DockPanel
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        IsVisible="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type local:LayoutContentPresenter}}, Converter={x:Static converters:ILayoutContentConverters.IsNotSplitLayoutContent}}">

        <ContentPresenter
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Classes="LayoutTarget"
            DockPanel.Dock="Left"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockLeftIcon}" />

        <ContentPresenter
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Classes="LayoutTarget"
            DockPanel.Dock="Right"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockRightIcon}" />

        <ContentPresenter
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Classes="LayoutTarget"
            DockPanel.Dock="Top"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockTopIcon}" />

        <ContentPresenter
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Classes="LayoutTarget"
            DockPanel.Dock="Bottom"
            Tag="{DynamicResource Avalonia.DefaultLayout.DockBottomIcon}" />

        <ContentPresenter Classes="LayoutTarget" Tag="{DynamicResource Avalonia.DefaultLayout.DockFillIcon}">
            <ContentPresenter.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">

                    <Binding
                        Converter="{x:Static ObjectConverters.IsNull}"
                        Path="Content"
                        RelativeSource="{RelativeSource AncestorType={x:Type local:LayoutContentPresenter}}" />

                    <MultiBinding Converter="{x:Static BoolConverters.And}">

                        <Binding
                            Converter="{x:Static converters:ILayoutContentConverters.IsStackable}"
                            Path="Content"
                            RelativeSource="{RelativeSource AncestorType={x:Type local:LayoutContentPresenter}}" />

                        <Binding Path="AllowStacking" RelativeSource="{RelativeSource AncestorType={x:Type local:LayoutDropControl}}" />

                    </MultiBinding>

                </MultiBinding>
            </ContentPresenter.IsVisible>
        </ContentPresenter>

    </DockPanel>

</Panel>
